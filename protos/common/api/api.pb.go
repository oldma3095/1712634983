// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v5.26.1
// source: common/api.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Method int32

const (
	Method_Create Method = 0
	Method_Delete Method = 1
	Method_Update Method = 2
	Method_Get    Method = 3
)

// Enum value maps for Method.
var (
	Method_name = map[int32]string{
		0: "Create",
		1: "Delete",
		2: "Update",
		3: "Get",
	}
	Method_value = map[string]int32{
		"Create": 0,
		"Delete": 1,
		"Update": 2,
		"Get":    3,
	}
)

func (x Method) Enum() *Method {
	p := new(Method)
	*p = x
	return p
}

func (x Method) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Method) Descriptor() protoreflect.EnumDescriptor {
	return file_common_api_proto_enumTypes[0].Descriptor()
}

func (Method) Type() protoreflect.EnumType {
	return &file_common_api_proto_enumTypes[0]
}

func (x Method) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Method.Descriptor instead.
func (Method) EnumDescriptor() ([]byte, []int) {
	return file_common_api_proto_rawDescGZIP(), []int{0}
}

// ///////////////////////////////////////////////////////result////////////////////////////////////////////////////////
type HandleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *Result `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *HandleReq) Reset() {
	*x = HandleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleReq) ProtoMessage() {}

func (x *HandleReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleReq.ProtoReflect.Descriptor instead.
func (*HandleReq) Descriptor() ([]byte, []int) {
	return file_common_api_proto_rawDescGZIP(), []int{0}
}

func (x *HandleReq) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *HandleReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *HandleReq) GetData() *Result {
	if x != nil {
		return x.Data
	}
	return nil
}

type HandleRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method Method `protobuf:"varint,1,opt,name=method,proto3,enum=common.Method" json:"method,omitempty"` // create delete update get
	Record bool   `protobuf:"varint,2,opt,name=record,proto3" json:"record,omitempty"`                    // 是否录制视频
}

func (x *HandleRes) Reset() {
	*x = HandleRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleRes) ProtoMessage() {}

func (x *HandleRes) ProtoReflect() protoreflect.Message {
	mi := &file_common_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleRes.ProtoReflect.Descriptor instead.
func (*HandleRes) Descriptor() ([]byte, []int) {
	return file_common_api_proto_rawDescGZIP(), []int{1}
}

func (x *HandleRes) GetMethod() Method {
	if x != nil {
		return x.Method
	}
	return Method_Create
}

func (x *HandleRes) GetRecord() bool {
	if x != nil {
		return x.Record
	}
	return false
}

// ///////////////////////////////////////////////////////result////////////////////////////////////////////////////////
type ResultReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *Result `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *ResultReq) Reset() {
	*x = ResultReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultReq) ProtoMessage() {}

func (x *ResultReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultReq.ProtoReflect.Descriptor instead.
func (*ResultReq) Descriptor() ([]byte, []int) {
	return file_common_api_proto_rawDescGZIP(), []int{2}
}

func (x *ResultReq) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResultReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ResultReq) GetData() *Result {
	if x != nil {
		return x.Data
	}
	return nil
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SaveTime      int64    `protobuf:"varint,2,opt,name=saveTime,proto3" json:"saveTime,omitempty"`   // 保存时间戳
	Image         string   `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`          // 图片地址
	RawImage      string   `protobuf:"bytes,4,opt,name=rawImage,proto3" json:"rawImage,omitempty"`    // 图片地址
	Video         string   `protobuf:"bytes,5,opt,name=video,proto3" json:"video,omitempty"`          // 录制视频地址
	VideoSize     int64    `protobuf:"varint,6,opt,name=videoSize,proto3" json:"videoSize,omitempty"` // 视频大小
	Flag          []string `protobuf:"bytes,7,rep,name=flag,proto3" json:"flag,omitempty"`
	Banker        []string `protobuf:"bytes,8,rep,name=banker,proto3" json:"banker,omitempty"`
	Player1       []string `protobuf:"bytes,9,rep,name=player1,proto3" json:"player1,omitempty"`
	Player2       []string `protobuf:"bytes,10,rep,name=player2,proto3" json:"player2,omitempty"`
	Player3       []string `protobuf:"bytes,11,rep,name=player3,proto3" json:"player3,omitempty"`
	Other         []string `protobuf:"bytes,12,rep,name=other,proto3" json:"other,omitempty"`
	SimpleFlag    string   `protobuf:"bytes,13,opt,name=simpleFlag,proto3" json:"simpleFlag,omitempty"`
	SimpleBanker  string   `protobuf:"bytes,14,opt,name=simpleBanker,proto3" json:"simpleBanker,omitempty"`
	SimplePlayer1 string   `protobuf:"bytes,15,opt,name=simplePlayer1,proto3" json:"simplePlayer1,omitempty"`
	SimplePlayer2 string   `protobuf:"bytes,16,opt,name=simplePlayer2,proto3" json:"simplePlayer2,omitempty"`
	SimplePlayer3 string   `protobuf:"bytes,17,opt,name=simplePlayer3,proto3" json:"simplePlayer3,omitempty"`
	SimpleOther   string   `protobuf:"bytes,18,opt,name=simpleOther,proto3" json:"simpleOther,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_common_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_common_api_proto_rawDescGZIP(), []int{3}
}

func (x *Result) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Result) GetSaveTime() int64 {
	if x != nil {
		return x.SaveTime
	}
	return 0
}

func (x *Result) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Result) GetRawImage() string {
	if x != nil {
		return x.RawImage
	}
	return ""
}

func (x *Result) GetVideo() string {
	if x != nil {
		return x.Video
	}
	return ""
}

func (x *Result) GetVideoSize() int64 {
	if x != nil {
		return x.VideoSize
	}
	return 0
}

func (x *Result) GetFlag() []string {
	if x != nil {
		return x.Flag
	}
	return nil
}

func (x *Result) GetBanker() []string {
	if x != nil {
		return x.Banker
	}
	return nil
}

func (x *Result) GetPlayer1() []string {
	if x != nil {
		return x.Player1
	}
	return nil
}

func (x *Result) GetPlayer2() []string {
	if x != nil {
		return x.Player2
	}
	return nil
}

func (x *Result) GetPlayer3() []string {
	if x != nil {
		return x.Player3
	}
	return nil
}

func (x *Result) GetOther() []string {
	if x != nil {
		return x.Other
	}
	return nil
}

func (x *Result) GetSimpleFlag() string {
	if x != nil {
		return x.SimpleFlag
	}
	return ""
}

func (x *Result) GetSimpleBanker() string {
	if x != nil {
		return x.SimpleBanker
	}
	return ""
}

func (x *Result) GetSimplePlayer1() string {
	if x != nil {
		return x.SimplePlayer1
	}
	return ""
}

func (x *Result) GetSimplePlayer2() string {
	if x != nil {
		return x.SimplePlayer2
	}
	return ""
}

func (x *Result) GetSimplePlayer3() string {
	if x != nil {
		return x.SimplePlayer3
	}
	return ""
}

func (x *Result) GetSimpleOther() string {
	if x != nil {
		return x.SimpleOther
	}
	return ""
}

type ResultRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ResultRes) Reset() {
	*x = ResultRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultRes) ProtoMessage() {}

func (x *ResultRes) ProtoReflect() protoreflect.Message {
	mi := &file_common_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultRes.ProtoReflect.Descriptor instead.
func (*ResultRes) Descriptor() ([]byte, []int) {
	return file_common_api_proto_rawDescGZIP(), []int{4}
}

func (x *ResultRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResultRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// ///////////////////////////////////////////////////////system////////////////////////////////////////////////////////
type ClientInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpu      *Cpu      `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Ram      *Ram      `protobuf:"bytes,2,opt,name=ram,proto3" json:"ram,omitempty"`
	Disk     *Disk     `protobuf:"bytes,3,opt,name=disk,proto3" json:"disk,omitempty"`
	Nvidia   []*Nvidia `protobuf:"bytes,4,rep,name=nvidia,proto3" json:"nvidia,omitempty"`
	IntelGPU *IntelGPU `protobuf:"bytes,5,opt,name=intelGPU,proto3" json:"intelGPU,omitempty"`
	NetSpeed *NetSpeed `protobuf:"bytes,6,opt,name=netSpeed,proto3" json:"netSpeed,omitempty"`
	Software *Software `protobuf:"bytes,7,opt,name=software,proto3" json:"software,omitempty"`
	Uuid     string    `protobuf:"bytes,8,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *ClientInfoReq) Reset() {
	*x = ClientInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInfoReq) ProtoMessage() {}

func (x *ClientInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInfoReq.ProtoReflect.Descriptor instead.
func (*ClientInfoReq) Descriptor() ([]byte, []int) {
	return file_common_api_proto_rawDescGZIP(), []int{5}
}

func (x *ClientInfoReq) GetCpu() *Cpu {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *ClientInfoReq) GetRam() *Ram {
	if x != nil {
		return x.Ram
	}
	return nil
}

func (x *ClientInfoReq) GetDisk() *Disk {
	if x != nil {
		return x.Disk
	}
	return nil
}

func (x *ClientInfoReq) GetNvidia() []*Nvidia {
	if x != nil {
		return x.Nvidia
	}
	return nil
}

func (x *ClientInfoReq) GetIntelGPU() *IntelGPU {
	if x != nil {
		return x.IntelGPU
	}
	return nil
}

func (x *ClientInfoReq) GetNetSpeed() *NetSpeed {
	if x != nil {
		return x.NetSpeed
	}
	return nil
}

func (x *ClientInfoReq) GetSoftware() *Software {
	if x != nil {
		return x.Software
	}
	return nil
}

func (x *ClientInfoReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ClientInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ClientInfoRes) Reset() {
	*x = ClientInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInfoRes) ProtoMessage() {}

func (x *ClientInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_common_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInfoRes.ProtoReflect.Descriptor instead.
func (*ClientInfoRes) Descriptor() ([]byte, []int) {
	return file_common_api_proto_rawDescGZIP(), []int{6}
}

func (x *ClientInfoRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ClientInfoRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type Software struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemHostname string `protobuf:"bytes,1,opt,name=systemHostname,proto3" json:"systemHostname,omitempty"`
	SystemVersion  string `protobuf:"bytes,2,opt,name=systemVersion,proto3" json:"systemVersion,omitempty"`
	SystemRuntime  string `protobuf:"bytes,3,opt,name=systemRuntime,proto3" json:"systemRuntime,omitempty"`
	SystemModel    string `protobuf:"bytes,4,opt,name=systemModel,proto3" json:"systemModel,omitempty"`
	KernelVersion  string `protobuf:"bytes,5,opt,name=kernelVersion,proto3" json:"kernelVersion,omitempty"`
	Mac            string `protobuf:"bytes,6,opt,name=mac,proto3" json:"mac,omitempty"`
}

func (x *Software) Reset() {
	*x = Software{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Software) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Software) ProtoMessage() {}

func (x *Software) ProtoReflect() protoreflect.Message {
	mi := &file_common_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Software.ProtoReflect.Descriptor instead.
func (*Software) Descriptor() ([]byte, []int) {
	return file_common_api_proto_rawDescGZIP(), []int{7}
}

func (x *Software) GetSystemHostname() string {
	if x != nil {
		return x.SystemHostname
	}
	return ""
}

func (x *Software) GetSystemVersion() string {
	if x != nil {
		return x.SystemVersion
	}
	return ""
}

func (x *Software) GetSystemRuntime() string {
	if x != nil {
		return x.SystemRuntime
	}
	return ""
}

func (x *Software) GetSystemModel() string {
	if x != nil {
		return x.SystemModel
	}
	return ""
}

func (x *Software) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *Software) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

type Engine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Busy    float32 `protobuf:"fixed32,2,opt,name=busy,proto3" json:"busy,omitempty"`
	Sema    float32 `protobuf:"fixed32,3,opt,name=sema,proto3" json:"sema,omitempty"`
	Wait    float32 `protobuf:"fixed32,4,opt,name=wait,proto3" json:"wait,omitempty"`
	BusyStr string  `protobuf:"bytes,5,opt,name=busyStr,proto3" json:"busyStr,omitempty"`
	SemaStr string  `protobuf:"bytes,6,opt,name=semaStr,proto3" json:"semaStr,omitempty"`
	WaitStr string  `protobuf:"bytes,7,opt,name=waitStr,proto3" json:"waitStr,omitempty"`
}

func (x *Engine) Reset() {
	*x = Engine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Engine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Engine) ProtoMessage() {}

func (x *Engine) ProtoReflect() protoreflect.Message {
	mi := &file_common_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Engine.ProtoReflect.Descriptor instead.
func (*Engine) Descriptor() ([]byte, []int) {
	return file_common_api_proto_rawDescGZIP(), []int{8}
}

func (x *Engine) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Engine) GetBusy() float32 {
	if x != nil {
		return x.Busy
	}
	return 0
}

func (x *Engine) GetSema() float32 {
	if x != nil {
		return x.Sema
	}
	return 0
}

func (x *Engine) GetWait() float32 {
	if x != nil {
		return x.Wait
	}
	return 0
}

func (x *Engine) GetBusyStr() string {
	if x != nil {
		return x.BusyStr
	}
	return ""
}

func (x *Engine) GetSemaStr() string {
	if x != nil {
		return x.SemaStr
	}
	return ""
}

func (x *Engine) GetWaitStr() string {
	if x != nil {
		return x.WaitStr
	}
	return ""
}

type IntelGPU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Period             string    `protobuf:"bytes,1,opt,name=period,proto3" json:"period,omitempty"`
	RequestedFrequency string    `protobuf:"bytes,2,opt,name=requestedFrequency,proto3" json:"requestedFrequency,omitempty"`
	ActualFrequency    string    `protobuf:"bytes,3,opt,name=actualFrequency,proto3" json:"actualFrequency,omitempty"`
	Interrupts         string    `protobuf:"bytes,4,opt,name=interrupts,proto3" json:"interrupts,omitempty"`
	Rc6                string    `protobuf:"bytes,5,opt,name=rc6,proto3" json:"rc6,omitempty"`
	Engines            []*Engine `protobuf:"bytes,6,rep,name=engines,proto3" json:"engines,omitempty"`
}

func (x *IntelGPU) Reset() {
	*x = IntelGPU{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntelGPU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntelGPU) ProtoMessage() {}

func (x *IntelGPU) ProtoReflect() protoreflect.Message {
	mi := &file_common_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntelGPU.ProtoReflect.Descriptor instead.
func (*IntelGPU) Descriptor() ([]byte, []int) {
	return file_common_api_proto_rawDescGZIP(), []int{9}
}

func (x *IntelGPU) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

func (x *IntelGPU) GetRequestedFrequency() string {
	if x != nil {
		return x.RequestedFrequency
	}
	return ""
}

func (x *IntelGPU) GetActualFrequency() string {
	if x != nil {
		return x.ActualFrequency
	}
	return ""
}

func (x *IntelGPU) GetInterrupts() string {
	if x != nil {
		return x.Interrupts
	}
	return ""
}

func (x *IntelGPU) GetRc6() string {
	if x != nil {
		return x.Rc6
	}
	return ""
}

func (x *IntelGPU) GetEngines() []*Engine {
	if x != nil {
		return x.Engines
	}
	return nil
}

type Cpu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpus        []float64 `protobuf:"fixed64,1,rep,packed,name=cpus,proto3" json:"cpus,omitempty"`
	Cores       int32     `protobuf:"varint,2,opt,name=cores,proto3" json:"cores,omitempty"`
	Name        string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Temperature uint32    `protobuf:"varint,4,opt,name=temperature,proto3" json:"temperature,omitempty"`
}

func (x *Cpu) Reset() {
	*x = Cpu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cpu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cpu) ProtoMessage() {}

func (x *Cpu) ProtoReflect() protoreflect.Message {
	mi := &file_common_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cpu.ProtoReflect.Descriptor instead.
func (*Cpu) Descriptor() ([]byte, []int) {
	return file_common_api_proto_rawDescGZIP(), []int{10}
}

func (x *Cpu) GetCpus() []float64 {
	if x != nil {
		return x.Cpus
	}
	return nil
}

func (x *Cpu) GetCores() int32 {
	if x != nil {
		return x.Cores
	}
	return 0
}

func (x *Cpu) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Cpu) GetTemperature() uint32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

type Ram struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsedMb      int32 `protobuf:"varint,1,opt,name=usedMb,proto3" json:"usedMb,omitempty"`
	TotalMb     int32 `protobuf:"varint,2,opt,name=totalMb,proto3" json:"totalMb,omitempty"`
	UsedPercent int32 `protobuf:"varint,3,opt,name=usedPercent,proto3" json:"usedPercent,omitempty"`
}

func (x *Ram) Reset() {
	*x = Ram{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ram) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ram) ProtoMessage() {}

func (x *Ram) ProtoReflect() protoreflect.Message {
	mi := &file_common_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ram.ProtoReflect.Descriptor instead.
func (*Ram) Descriptor() ([]byte, []int) {
	return file_common_api_proto_rawDescGZIP(), []int{11}
}

func (x *Ram) GetUsedMb() int32 {
	if x != nil {
		return x.UsedMb
	}
	return 0
}

func (x *Ram) GetTotalMb() int32 {
	if x != nil {
		return x.TotalMb
	}
	return 0
}

func (x *Ram) GetUsedPercent() int32 {
	if x != nil {
		return x.UsedPercent
	}
	return 0
}

type Disk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsedMb      int32 `protobuf:"varint,1,opt,name=usedMb,proto3" json:"usedMb,omitempty"`
	UsedGb      int32 `protobuf:"varint,2,opt,name=usedGb,proto3" json:"usedGb,omitempty"`
	TotalMb     int32 `protobuf:"varint,3,opt,name=totalMb,proto3" json:"totalMb,omitempty"`
	TotalGb     int32 `protobuf:"varint,4,opt,name=totalGb,proto3" json:"totalGb,omitempty"`
	UsedPercent int32 `protobuf:"varint,5,opt,name=usedPercent,proto3" json:"usedPercent,omitempty"`
}

func (x *Disk) Reset() {
	*x = Disk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Disk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Disk) ProtoMessage() {}

func (x *Disk) ProtoReflect() protoreflect.Message {
	mi := &file_common_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Disk.ProtoReflect.Descriptor instead.
func (*Disk) Descriptor() ([]byte, []int) {
	return file_common_api_proto_rawDescGZIP(), []int{12}
}

func (x *Disk) GetUsedMb() int32 {
	if x != nil {
		return x.UsedMb
	}
	return 0
}

func (x *Disk) GetUsedGb() int32 {
	if x != nil {
		return x.UsedGb
	}
	return 0
}

func (x *Disk) GetTotalMb() int32 {
	if x != nil {
		return x.TotalMb
	}
	return 0
}

func (x *Disk) GetTotalGb() int32 {
	if x != nil {
		return x.TotalGb
	}
	return 0
}

func (x *Disk) GetUsedPercent() int32 {
	if x != nil {
		return x.UsedPercent
	}
	return 0
}

type Nvidia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index             string `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	Name              string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	TemperatureGPU    string `protobuf:"bytes,3,opt,name=temperatureGPU,proto3" json:"temperatureGPU,omitempty"`
	UtilizationGPU    string `protobuf:"bytes,4,opt,name=utilizationGPU,proto3" json:"utilizationGPU,omitempty"`
	UtilizationMemory string `protobuf:"bytes,5,opt,name=utilizationMemory,proto3" json:"utilizationMemory,omitempty"`
	MemoryTotal       string `protobuf:"bytes,6,opt,name=memoryTotal,proto3" json:"memoryTotal,omitempty"`
	MemoryFree        string `protobuf:"bytes,7,opt,name=memoryFree,proto3" json:"memoryFree,omitempty"`
	MemoryUsed        string `protobuf:"bytes,8,opt,name=memoryUsed,proto3" json:"memoryUsed,omitempty"`
	CudaVersion       string `protobuf:"bytes,9,opt,name=cudaVersion,proto3" json:"cudaVersion,omitempty"`
	PowerDraw         string `protobuf:"bytes,10,opt,name=powerDraw,proto3" json:"powerDraw,omitempty"`
	DriverVersion     string `protobuf:"bytes,11,opt,name=driverVersion,proto3" json:"driverVersion,omitempty"`
}

func (x *Nvidia) Reset() {
	*x = Nvidia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nvidia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nvidia) ProtoMessage() {}

func (x *Nvidia) ProtoReflect() protoreflect.Message {
	mi := &file_common_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nvidia.ProtoReflect.Descriptor instead.
func (*Nvidia) Descriptor() ([]byte, []int) {
	return file_common_api_proto_rawDescGZIP(), []int{13}
}

func (x *Nvidia) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *Nvidia) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Nvidia) GetTemperatureGPU() string {
	if x != nil {
		return x.TemperatureGPU
	}
	return ""
}

func (x *Nvidia) GetUtilizationGPU() string {
	if x != nil {
		return x.UtilizationGPU
	}
	return ""
}

func (x *Nvidia) GetUtilizationMemory() string {
	if x != nil {
		return x.UtilizationMemory
	}
	return ""
}

func (x *Nvidia) GetMemoryTotal() string {
	if x != nil {
		return x.MemoryTotal
	}
	return ""
}

func (x *Nvidia) GetMemoryFree() string {
	if x != nil {
		return x.MemoryFree
	}
	return ""
}

func (x *Nvidia) GetMemoryUsed() string {
	if x != nil {
		return x.MemoryUsed
	}
	return ""
}

func (x *Nvidia) GetCudaVersion() string {
	if x != nil {
		return x.CudaVersion
	}
	return ""
}

func (x *Nvidia) GetPowerDraw() string {
	if x != nil {
		return x.PowerDraw
	}
	return ""
}

func (x *Nvidia) GetDriverVersion() string {
	if x != nil {
		return x.DriverVersion
	}
	return ""
}

type NetSpeed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendSpeed float32 `protobuf:"fixed32,1,opt,name=sendSpeed,proto3" json:"sendSpeed,omitempty"`
	RecvSpeed float32 `protobuf:"fixed32,2,opt,name=recvSpeed,proto3" json:"recvSpeed,omitempty"`
}

func (x *NetSpeed) Reset() {
	*x = NetSpeed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetSpeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetSpeed) ProtoMessage() {}

func (x *NetSpeed) ProtoReflect() protoreflect.Message {
	mi := &file_common_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetSpeed.ProtoReflect.Descriptor instead.
func (*NetSpeed) Descriptor() ([]byte, []int) {
	return file_common_api_proto_rawDescGZIP(), []int{14}
}

func (x *NetSpeed) GetSendSpeed() float32 {
	if x != nil {
		return x.SendSpeed
	}
	return 0
}

func (x *NetSpeed) GetRecvSpeed() float32 {
	if x != nil {
		return x.RecvSpeed
	}
	return 0
}

type NetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatName   string `protobuf:"bytes,1,opt,name=statName,proto3" json:"statName,omitempty"`
	LocalIpNet string `protobuf:"bytes,2,opt,name=localIpNet,proto3" json:"localIpNet,omitempty"`
}

func (x *NetInfo) Reset() {
	*x = NetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetInfo) ProtoMessage() {}

func (x *NetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetInfo.ProtoReflect.Descriptor instead.
func (*NetInfo) Descriptor() ([]byte, []int) {
	return file_common_api_proto_rawDescGZIP(), []int{15}
}

func (x *NetInfo) GetStatName() string {
	if x != nil {
		return x.StatName
	}
	return ""
}

func (x *NetInfo) GetLocalIpNet() string {
	if x != nil {
		return x.LocalIpNet
	}
	return ""
}

var File_common_api_proto protoreflect.FileDescriptor

var file_common_api_proto_rawDesc = []byte{
	0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x55, 0x0a, 0x09, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x22, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x4b, 0x0a, 0x09, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x26,
	0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x55,
	0x0a, 0x09, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x22, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x82, 0x04, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x61, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x73, 0x61, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x61, 0x77, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x61, 0x77, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6b, 0x65, 0x72,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x31, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x32, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x33, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x33, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x46, 0x6c, 0x61, 0x67,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x46, 0x6c,
	0x61, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x61, 0x6e, 0x6b,
	0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x42, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x31, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x31, 0x12, 0x24, 0x0a, 0x0d,
	0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x32, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x33, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x33, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x22, 0x31, 0x0a, 0x09, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xb5, 0x02,
	0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12,
	0x1d, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x70, 0x75, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x1d,
	0x0a, 0x03, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x61, 0x6d, 0x52, 0x03, 0x72, 0x61, 0x6d, 0x12, 0x20, 0x0a,
	0x04, 0x64, 0x69, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x52, 0x04, 0x64, 0x69, 0x73, 0x6b, 0x12,
	0x26, 0x0a, 0x06, 0x6e, 0x76, 0x69, 0x64, 0x69, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x76, 0x69, 0x64, 0x69, 0x61, 0x52,
	0x06, 0x6e, 0x76, 0x69, 0x64, 0x69, 0x61, 0x12, 0x2c, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x6c,
	0x47, 0x50, 0x55, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x47, 0x50, 0x55, 0x52, 0x08, 0x69, 0x6e, 0x74,
	0x65, 0x6c, 0x47, 0x50, 0x55, 0x12, 0x2c, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x53, 0x70, 0x65, 0x65,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4e, 0x65, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53,
	0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x52, 0x08, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xd8, 0x01, 0x0a,
	0x08, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x24, 0x0a, 0x0d, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x22, 0xa6, 0x01, 0x0a, 0x06, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x75, 0x73, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x62, 0x75, 0x73, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65,
	0x6d, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x73, 0x65, 0x6d, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x77, 0x61, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x77, 0x61,
	0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x73, 0x79, 0x53, 0x74, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x73, 0x79, 0x53, 0x74, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x65, 0x6d, 0x61, 0x53, 0x74, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x65, 0x6d, 0x61, 0x53, 0x74, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x61, 0x69, 0x74, 0x53, 0x74,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x61, 0x69, 0x74, 0x53, 0x74, 0x72,
	0x22, 0xd8, 0x01, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x47, 0x50, 0x55, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x46, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x46,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x63, 0x36, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x63,
	0x36, 0x12, 0x28, 0x0a, 0x07, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x73, 0x22, 0x65, 0x0a, 0x03, 0x43,
	0x70, 0x75, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x70, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x01,
	0x52, 0x04, 0x63, 0x70, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x22, 0x59, 0x0a, 0x03, 0x52, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x64, 0x4d, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x64, 0x4d,
	0x62, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x62, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x62, 0x12, 0x20, 0x0a, 0x0b, 0x75,
	0x73, 0x65, 0x64, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x75, 0x73, 0x65, 0x64, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0x8c, 0x01,
	0x0a, 0x04, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x64, 0x4d, 0x62,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x64, 0x4d, 0x62, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x64, 0x47, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x64, 0x47, 0x62, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d,
	0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x62,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x62, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73,
	0x65, 0x64, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x75, 0x73, 0x65, 0x64, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0xf8, 0x02, 0x0a,
	0x06, 0x4e, 0x76, 0x69, 0x64, 0x69, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x47, 0x50, 0x55, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x65, 0x6d, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x47, 0x50, 0x55, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x74, 0x69,
	0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x50, 0x55, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x50,
	0x55, 0x12, 0x2c, 0x0a, 0x11, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x75, 0x74,
	0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12,
	0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x46, 0x72, 0x65, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x46, 0x72, 0x65,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x65, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x65,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x64, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x64, 0x61, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x72, 0x61, 0x77,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x44, 0x72, 0x61,
	0x77, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x46, 0x0a, 0x08, 0x4e, 0x65, 0x74, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x65,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x76, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x72, 0x65, 0x63, 0x76, 0x53, 0x70, 0x65, 0x65, 0x64, 0x22,
	0x45, 0x0a, 0x07, 0x4e, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74,
	0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74,
	0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49,
	0x70, 0x4e, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x49, 0x70, 0x4e, 0x65, 0x74, 0x2a, 0x35, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x0a, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x10, 0x03, 0x32, 0xb4, 0x01,
	0x0a, 0x0a, 0x41, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x0a,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x1a, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x22, 0x00, 0x28, 0x01, 0x12, 0x30, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x34,
	0x0a, 0x06, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00,
	0x28, 0x01, 0x30, 0x01, 0x42, 0x0c, 0x5a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x61,
	0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_api_proto_rawDescOnce sync.Once
	file_common_api_proto_rawDescData = file_common_api_proto_rawDesc
)

func file_common_api_proto_rawDescGZIP() []byte {
	file_common_api_proto_rawDescOnce.Do(func() {
		file_common_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_api_proto_rawDescData)
	})
	return file_common_api_proto_rawDescData
}

var file_common_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_common_api_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_common_api_proto_goTypes = []interface{}{
	(Method)(0),           // 0: common.Method
	(*HandleReq)(nil),     // 1: common.HandleReq
	(*HandleRes)(nil),     // 2: common.HandleRes
	(*ResultReq)(nil),     // 3: common.ResultReq
	(*Result)(nil),        // 4: common.Result
	(*ResultRes)(nil),     // 5: common.ResultRes
	(*ClientInfoReq)(nil), // 6: common.ClientInfoReq
	(*ClientInfoRes)(nil), // 7: common.ClientInfoRes
	(*Software)(nil),      // 8: common.Software
	(*Engine)(nil),        // 9: common.Engine
	(*IntelGPU)(nil),      // 10: common.IntelGPU
	(*Cpu)(nil),           // 11: common.Cpu
	(*Ram)(nil),           // 12: common.Ram
	(*Disk)(nil),          // 13: common.Disk
	(*Nvidia)(nil),        // 14: common.Nvidia
	(*NetSpeed)(nil),      // 15: common.NetSpeed
	(*NetInfo)(nil),       // 16: common.NetInfo
}
var file_common_api_proto_depIdxs = []int32{
	4,  // 0: common.HandleReq.Data:type_name -> common.Result
	0,  // 1: common.HandleRes.method:type_name -> common.Method
	4,  // 2: common.ResultReq.Data:type_name -> common.Result
	11, // 3: common.ClientInfoReq.cpu:type_name -> common.Cpu
	12, // 4: common.ClientInfoReq.ram:type_name -> common.Ram
	13, // 5: common.ClientInfoReq.disk:type_name -> common.Disk
	14, // 6: common.ClientInfoReq.nvidia:type_name -> common.Nvidia
	10, // 7: common.ClientInfoReq.intelGPU:type_name -> common.IntelGPU
	15, // 8: common.ClientInfoReq.netSpeed:type_name -> common.NetSpeed
	8,  // 9: common.ClientInfoReq.software:type_name -> common.Software
	9,  // 10: common.IntelGPU.engines:type_name -> common.Engine
	6,  // 11: common.ApiService.ClientInfo:input_type -> common.ClientInfoReq
	3,  // 12: common.ApiService.Result:input_type -> common.ResultReq
	1,  // 13: common.ApiService.Handle:input_type -> common.HandleReq
	7,  // 14: common.ApiService.ClientInfo:output_type -> common.ClientInfoRes
	5,  // 15: common.ApiService.Result:output_type -> common.ResultRes
	2,  // 16: common.ApiService.Handle:output_type -> common.HandleRes
	14, // [14:17] is the sub-list for method output_type
	11, // [11:14] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_common_api_proto_init() }
func file_common_api_proto_init() {
	if File_common_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Software); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Engine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntelGPU); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cpu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ram); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Disk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nvidia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetSpeed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_common_api_proto_goTypes,
		DependencyIndexes: file_common_api_proto_depIdxs,
		EnumInfos:         file_common_api_proto_enumTypes,
		MessageInfos:      file_common_api_proto_msgTypes,
	}.Build()
	File_common_api_proto = out.File
	file_common_api_proto_rawDesc = nil
	file_common_api_proto_goTypes = nil
	file_common_api_proto_depIdxs = nil
}
